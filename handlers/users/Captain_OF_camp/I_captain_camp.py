import logging

from aiogram.dispatcher.filters import Text
from aiogram.types import Message, CallbackQuery

from keyboards.inline.Captain_camp.Choise_ulad import lead_camp
from keyboards.inline.Captain_camp.upy.winter_camp import all_camp
from loader import dp


@dp.message_handler(Text(endswith=["–Ø –∫–æ–º–µ–Ω–¥–∞–Ω—Ç —Ç–∞–±–æ—Ä—É üèï"])) #–∫–æ–º–∞–Ω–¥–∞ –∫–æ–ª–∏ –æ–±–∏—Ä–∞—î—à —â–æ —Ç–∏ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç
async def choose(msg: Message):
    await msg.answer(text="–Ø–∫–∏–π –ø–ª–∞–Ω—É—î—à —Ä–æ–±–∏—Ç–∏ —Ç–∞–±—ñ—Ä?", reply_markup=all_camp)



@dp.callback_query_handler(text_contains="summercamp")  # –∫–æ–º–∞–Ω–¥–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ –ª—ñ—Ç–Ω—ñ–π —Ç–∞–±—ñ—Ä
async def choise_summercamp(call: CallbackQuery):
    await call.answer(cache_time=60)
    callback_data = call.data
    logging.info(f"call={callback_data}")
    await call.message.answer("–í—ñ–¥ —è–∫–æ–≥–æ —É–ª–∞–¥—É –ø–ª–∞–Ω—É—î—à —Ä–æ–±–∏—Ç–∏ —Ç–∞–±—ñ—Ä ?",
                              reply_markup=lead_camp)

@dp.callback_query_handler(text_contains="timecamp")  # –∫–æ–º–∞–Ω–¥–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å
async def comeback(call: CallbackQuery):
    await call.answer(cache_time=60)
    callback_data = call.data
    logging.info(f"call={callback_data}")
    await call.message.answer("–Ø–∫–∏–π –ø–ª–∞–Ω—É—î—à —Ä–æ–±–∏—Ç–∏ —Ç–∞–±—ñ—Ä?", reply_markup=all_camp)


